<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:sys="clr-namespace:System;assembly=mscorlib">


    <!--=============================================SYSTEM COLORS===============================================-->
    <SolidColorBrush x:Key="ActiveBorderBrush" Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}" />
    <SolidColorBrush x:Key="ActiveCaptionBrush" Color="{DynamicResource {x:Static SystemColors.ActiveCaptionColorKey}}" />
    <SolidColorBrush x:Key="ActiveCaptionTextBrush" Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}" />
    <SolidColorBrush x:Key="AppWorkspaceBrush" Color="{DynamicResource {x:Static SystemColors.AppWorkspaceColorKey}}" />
    <SolidColorBrush x:Key="ControlBrush" Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}" />
    <SolidColorBrush x:Key="ControlDarkBrush" Color="{DynamicResource {x:Static SystemColors.ControlDarkColorKey}}" />
    <SolidColorBrush x:Key="ControlDarkDarkBrush" Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}" />
    <SolidColorBrush x:Key="ControlLightBrush" Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}" />
    <SolidColorBrush x:Key="ControlLightLightBrush" Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" />
    <SolidColorBrush x:Key="ControlTextBrush" Color="{DynamicResource {x:Static SystemColors.ControlTextColorKey}}" />
    <SolidColorBrush x:Key="DesktopBrush" Color="{DynamicResource {x:Static SystemColors.DesktopColorKey}}" />
    <SolidColorBrush x:Key="GradientActiveCaptionBrush" Color="{DynamicResource {x:Static SystemColors.GradientActiveCaptionColorKey}}" />
    <SolidColorBrush x:Key="GradientInactiveCaptionBrush" Color="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionColorKey}}" />
    <SolidColorBrush x:Key="GrayTextBrush" Color="{DynamicResource {x:Static SystemColors.GrayTextColorKey}}" />
    <SolidColorBrush x:Key="HighlightBrush" Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}" />
    <SolidColorBrush x:Key="HighlightTextBrush" Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}" />
    <SolidColorBrush x:Key="HotTrackBrush" Color="{DynamicResource {x:Static SystemColors.HotTrackColorKey}}" />
    <SolidColorBrush x:Key="InactiveBorderBrush" Color="{DynamicResource {x:Static SystemColors.InactiveBorderColorKey}}" />
    <SolidColorBrush x:Key="InactiveCaptionBrush" Color="{DynamicResource {x:Static SystemColors.InactiveCaptionColorKey}}" />
    <SolidColorBrush x:Key="InactiveCaptionTextBrush" Color="{DynamicResource {x:Static SystemColors.InactiveCaptionTextColorKey}}" />
    <SolidColorBrush x:Key="InfoBrush" Color="{DynamicResource {x:Static SystemColors.InfoColorKey}}" />
    <SolidColorBrush x:Key="InfoTextBrush" Color="{DynamicResource {x:Static SystemColors.InfoTextColorKey}}" />
    <SolidColorBrush x:Key="MenuBarBrush" Color="{DynamicResource {x:Static SystemColors.MenuBarColorKey}}" />
    <SolidColorBrush x:Key="MenuBrush" Color="{DynamicResource {x:Static SystemColors.MenuColorKey}}" />
    <SolidColorBrush x:Key="MenuHighlightBrush" Color="{DynamicResource {x:Static SystemColors.MenuHighlightColorKey}}" />
    <SolidColorBrush x:Key="MenuTextBrush" Color="{DynamicResource {x:Static SystemColors.MenuTextColorKey}}" />
    <SolidColorBrush x:Key="ScrollBarBrush" Color="{DynamicResource {x:Static SystemColors.ScrollBarColorKey}}" />
    <SolidColorBrush x:Key="WindowBrush" Color="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
    <SolidColorBrush x:Key="WindowFrameBrush" Color="{DynamicResource {x:Static SystemColors.WindowFrameColorKey}}" />
    <SolidColorBrush x:Key="WindowTextBrush" Color="{DynamicResource {x:Static SystemColors.WindowTextColorKey}}" />
    <SolidColorBrush x:Key="DisabledForeground" Color="#AFAFAF" />
    <!--=============================================END SYSTEM COLORS===============================================-->

    <!--=============================================PROPERTIES===============================================-->
    <Thickness x:Key="Thickness0-100" Left="0" Top="-1" Right="0" Bottom="0" />
    <Thickness x:Key="Thickness00-10" Left="0" Top="0" Right="-1" Bottom="0" />
    <Thickness x:Key="Thickness00-1-1" Left="0" Top="0" Right="-1" Bottom="-1" />
    <Thickness x:Key="Thickness1" Left="1" Top="1" Right="1" Bottom="1" />
    <Thickness x:Key="Thickness0100" Left="0" Top="1" Right="0" Bottom="0" />
    <Thickness x:Key="Thickness0010" Left="0" Top="0" Right="1" Bottom="0" />
    <Thickness x:Key="Thickness0001" Left="0" Top="0" Right="0" Bottom="1" />
    <Thickness x:Key="Thickness0111" Left="0" Top="1" Right="1" Bottom="1" />
    <Thickness x:Key="Thickness0011" Left="0" Top="0" Right="1" Bottom="1" />
    <Thickness x:Key="Thickness1011" Left="1" Top="0" Right="1" Bottom="1" />
    <Thickness x:Key="Thickness1110" Left="1" Top="1" Right="1" Bottom="0" />
    <Thickness x:Key="Thickness1101" Left="1" Top="1" Right="0" Bottom="1" />
    <Thickness x:Key="Thickness2" Left="2" Top="2" Right="2" Bottom="2" />
    <sys:Double x:Key="ThiknessD1">1</sys:Double>
    <sys:Double x:Key="ThicknessD1">1</sys:Double>
    <sys:Double x:Key="ThicknessD2">2</sys:Double>
    <!--=============================================END PROOPERTIES===============================================-->

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
    </Style>

    <Style TargetType="{x:Type ListView}">
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
    </Style>

    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
    </Style>

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style TargetType="{x:Type Window}" x:Key="WindowStyle" BasedOn="{StaticResource {x:Type Window}}">
        <Setter Property="FontFamily" Value="Microsoft Sans Serif" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource ControlBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{StaticResource ControlBrush}" BorderThickness="0" Padding="6,7,8,8">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Window}" x:Key="WindowStyleArial" BasedOn="{StaticResource {x:Type Window}}">
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource ControlBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{StaticResource ControlBrush}" BorderThickness="0" Padding="6,7,8,8">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Window}" x:Key="WindowStyleGrip" BasedOn="{StaticResource WindowStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border Background="{StaticResource ControlBrush}" BorderThickness="0" Padding="6,7,10,10">
                            <AdornerDecorator>
                                <ContentPresenter />
                            </AdornerDecorator>
                        </Border>
                        <ResizeGrip HorizontalAlignment="Right" VerticalAlignment="Bottom" KeyboardNavigation.TabNavigation="Continue" IsTabStop="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Window}" x:Key="MainWindowStyle" BasedOn="{StaticResource WindowStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{StaticResource ControlBrush}" BorderThickness="0" Padding="12,14,16,16">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="UsualButtonStyle">
        <Setter Property="MinWidth" Value="73" />
        <Setter Property="MinHeight" Value="21" />
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource UsualButtonStyle}"  x:Key="CloseButtonStyle" >
        <Setter Property="Margin" Value="8,8,0,0" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ResetButtonStyle">
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource GrayTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Blue" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness2}}" />
                            <Setter Property="Padding" Value="1" />
                            <Setter Property="BorderBrush" Value="LightGray" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ActiveOverButtonStyle">
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource GrayTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#ADD8E6" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="LightGray" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="DeleteButtonGraphic24TemplateStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="MaxWidth" Value="24" />
        <Setter Property="MaxHeight" Value="24" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Canvas Opacity="0.5" Width="20" Height="20" Background="Transparent">
                        <Line X1="5" Y1="5"
                              X2="15" Y2="15" Stroke="Red" StrokeThickness="{Binding Path=., Source={StaticResource ThicknessD2}}" />
                        <Line X1="15" Y1="5"
                              X2="5" Y2="15" Stroke="Red" StrokeThickness="{Binding Path=., Source={StaticResource ThicknessD2}}" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>

                            <Canvas Opacity="1" Width="20" Height="20" Background="Transparent">
                                <Line X1="3" Y1="3"
                          X2="17" Y2="17" Stroke="Red" StrokeThickness="{Binding Path=., Source={StaticResource ThicknessD2}}" />
                                <Line X1="17" Y1="3"
                          X2="3" Y2="17" Stroke="Red" StrokeThickness="{Binding Path=., Source={StaticResource ThicknessD2}}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Canvas Opacity="1" Width="20" Height="20" Background="Transparent">
                                <Line X1="6" Y1="6"
                          X2="14" Y2="14" Stroke="Red" StrokeThickness="{Binding Path=., Source={StaticResource ThicknessD2}}" />
                                <Line X1="14" Y1="6"
                          X2="6" Y2="14" Stroke="Red" StrokeThickness="{Binding Path=., Source={StaticResource ThicknessD2}}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="DeleteButtonGraphic16TemplateStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="MinWidth" Value="16" />
        <Setter Property="MinHeight" Value="16" />
        <Setter Property="MaxWidth" Value="16" />
        <Setter Property="MaxHeight" Value="16" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Canvas Opacity="0.5" Width="12" Height="12" Background="Transparent">
                        <Line X1="2" Y1="2"
                              X2="10" Y2="10" Stroke="Red" StrokeThickness="{Binding Path=., Source={StaticResource ThicknessD2}}" />
                        <Line X1="10" Y1="2"
                              X2="2" Y2="10" Stroke="Red" StrokeThickness="{Binding Path=., Source={StaticResource ThicknessD2}}" />
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>

                            <Canvas Opacity="1" Width="12" Height="12" Background="Transparent">
                                <Line X1="1" Y1="1"
                          X2="11" Y2="11" Stroke="Red" StrokeThickness="{Binding Path=., Source={StaticResource ThicknessD2}}" />
                                <Line X1="11" Y1="1"
                          X2="1" Y2="11" Stroke="Red" StrokeThickness="{Binding Path=., Source={StaticResource ThicknessD2}}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Canvas Opacity="1" Width="12" Height="12" Background="Transparent">
                                <Line X1="3" Y1="3"
                          X2="9" Y2="9" Stroke="Red" StrokeThickness="{Binding Path=., Source={StaticResource ThicknessD2}}" />
                                <Line X1="9" Y1="3"
                          X2="3" Y2="9" Stroke="Red" StrokeThickness="{Binding Path=., Source={StaticResource ThicknessD2}}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ToolbarTextButtonStyle">
        <Setter Property="Background" Value="{StaticResource ControlBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource GradientInactiveCaptionBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource GradientActiveCaptionBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{StaticResource InactiveBorderBrush}" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InfoLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="{Binding Path=., Source={StaticResource ThicknessD1}}" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Background" Value="#0078D7" />
        <Setter Property="BorderBrush" Value="#075592" />
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center" >
                        <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding FontSize}" Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" UseLayoutRounding="False" x:Name="elipseInfo"/>
                        <Path Data="M0.5,0.5 L1.5,0.5 1.5,1.5 0.5,1.5 0.5,0.5 1.5,0.5 M0.5,3.5 L1.5,3.5 1.5,7.5 0.5,7.5 0.5,3.5Z" Stretch="Uniform" Margin="3"
							Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Fill="{TemplateBinding Foreground}" SnapsToDevicePixels="True" UseLayoutRounding="False" />
                        <!-- <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
							<Rectangle Stroke="{TemplateBinding Foreground}" StrokeThickness="{TemplateBinding FontSize}" Width="2" Height="2" Fill="{TemplateBinding Foreground}" SnapsToDevicePixels="True" UseLayoutRounding="False"/>
							<Rectangle Stroke="{TemplateBinding Foreground}" StrokeThickness="{TemplateBinding FontSize}" Width="2" Height="5" Margin="{Binding Path=., Source={StaticResource Thickness0100}}" Fill="{TemplateBinding Foreground}" SnapsToDevicePixels="True" UseLayoutRounding="False"/>
						</StackPanel> -->
                        <!-- <TextBlock Text="i" Margin="0,1,0,0" FontWeight="{TemplateBinding FontWeight}" FontFamily="{TemplateBinding FontFamily}"  FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" SnapsToDevicePixels="True" UseLayoutRounding="False"/> -->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="elipseInfo" Value="{StaticResource DisabledForeground}" />
                            <Setter Property="Stroke" TargetName="elipseInfo" Value="{StaticResource DisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipService.ShowDuration" Value="9999999" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ToolbarImageButtonStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="1,0,1,0" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource GradientActiveCaptionBrush}" />
                            <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
                            <Setter Property="Padding" Value="1,0,1,0" />
                            <Setter Property="Background" Value="{StaticResource GradientInactiveCaptionBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ActiveCaptionBrush}" />
                            <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
                            <Setter Property="Padding" Value="2,0,0,0" />
                            <Setter Property="Background" Value="{StaticResource GradientActiveCaptionBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonNotActiveStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinWidth" Value="12" />
        <Setter Property="MinHeight" Value="12" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonTransparentTextContentActiveStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinWidth" Value="12" />
        <Setter Property="MinHeight" Value="12" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="PATH_Content">
                            <ContentPresenter.LayoutTransform>
                                <ScaleTransform CenterX="0" CenterY="0" ScaleX="1" ScaleY="1" />
                            </ContentPresenter.LayoutTransform>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="LayoutTransform" TargetName="PATH_Content" >
                                <Setter.Value>
                                    <ScaleTransform CenterX="0" CenterY="0" ScaleX="1.1" ScaleY="1.1" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="LayoutTransform" TargetName="PATH_Content" >
                                <Setter.Value>
                                    <ScaleTransform CenterX="0" CenterY="0" ScaleX="0.9" ScaleY="0.9" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="ToolbarImageToogleButtonStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource GradientActiveCaptionBrush}" />
                            <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
                            <Setter Property="Background" Value="{StaticResource GradientInactiveCaptionBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ActiveCaptionBrush}" />
                            <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
                            <Setter Property="Background" Value="{StaticResource GradientActiveCaptionBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="ImageToogleButtonNotActiveStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinWidth" Value="12" />
        <Setter Property="MinHeight" Value="12" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="Android_24x12xToggleButtonStyle">
        <Setter Property="Background" Value="#0078D7" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="12" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Rectangle x:Name="PATH_Main"
							 Width="{TemplateBinding ActualWidth}" 
							 Height="{TemplateBinding ActualHeight}" 
							 Stroke="{TemplateBinding BorderBrush}" 
							 StrokeThickness="{TemplateBinding BorderThickness}" 
							 Fill="{TemplateBinding Foreground}"
							 RadiusX="6" RadiusY="6"
							 SnapsToDevicePixels="True"
							 UseLayoutRounding="False"/>
                        <Ellipse x:Name="PATH_Indicator"
							VerticalAlignment="Center"
							HorizontalAlignment="Left"
							Margin="3,0,0,0"
							Width="{TemplateBinding ActualHeight, ConverterParameter=50}"
							Height="{TemplateBinding ActualHeight, ConverterParameter=50}"
							Stroke="{TemplateBinding BorderBrush}" 
							 StrokeThickness="{TemplateBinding BorderThickness}" 
							 Fill="{TemplateBinding BorderBrush}" 
							 SnapsToDevicePixels="True"
							 UseLayoutRounding="False"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=ToggleButton}}" TargetName="PATH_Main" />
                            <Setter Property="Stroke" Value="{Binding Path=Background, RelativeSource={RelativeSource AncestorType=ToggleButton}}" TargetName="PATH_Main" />
                            <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ToggleButton}}" TargetName="PATH_Indicator" />
                            <Setter Property="Stroke" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=ToggleButton}}" TargetName="PATH_Indicator" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="PATH_Indicator" Storyboard.TargetProperty="Margin" From="3,0,0,0" To="15,0,0,0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="PATH_Indicator" Storyboard.TargetProperty="Margin" From="15,0,0,0" To="3,0,0,0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter Property="Opacity" Value="0.9" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" >
                            <Setter Property="Background" Value="Gray" />
                            <Setter Property="Foreground" Value="DarkGray" />
                            <Setter Property="BorderBrush" Value="Gray" />
                        </Trigger>
                        <!-- <Trigger Property="Button.IsPressed" Value="True" >
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ThicknessAnimation Storyboard.TargetName="PATH_Indicator" Storyboard.TargetProperty="Margin" From="3,0,0,0" To="0,0,3,0" Duration="0:0:1" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
						</Trigger> -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--=============================================START Borders STYLE===============================================-->

    <Style TargetType="{x:Type Border}" x:Key="ActiveOverBorderStyle">
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="{Binding Path=., Source={StaticResource Thickness1}}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#ADD8E6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--=============================================END Borders STYLE===================================================-->

    <!--=============================================START COMBOBOX STYLE===============================================-->

    <Geometry x:Key="UpArrowGeometry">F1M0,4L3.5,0 3.5,2 2,4 M7,4 L3.5,0 3.5,2 5,4z</Geometry>
    <Geometry x:Key="UpArrowGeometry2">F1M0,3L2.5,0 2.5,2 1,4 M5,3 L2.5,0 2.5,2 4,4z</Geometry>
    <Geometry x:Key="UpArrowGeometry3">F1M0,2L1.5,0 1.5,2 0,4 M3,2 L1.5,0 1.5,2 3,4z</Geometry>
    <Geometry x:Key="UpArrowGeometry4">M0,4C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4z</Geometry>

    <Geometry x:Key="DownArrowGeometry">F1M0,0L3.5,4 3.5,2 2,0 M7,0 L3.5,4 3.5,2 5,0z</Geometry>
    <Geometry x:Key="DownArrowGeometry2">F1M0,1L2.5,4 2.5,2 1,0 M5,1 L2.5,4 2.5,2 4,0z</Geometry>
    <Geometry x:Key="DownArrowGeometry3">F1M0,2L1.5,4 1.5,2 0,0 M3,2 L1.5,4 1.5,2 3,0z</Geometry>
    <Geometry x:Key="DownArrowGeometry4">M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z</Geometry>

    <Geometry x:Key="DropDownMCArrowGeometry">M0,2.5C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5z</Geometry>

    <Geometry x:Key="DownComboGeometry">F1M0.7,1L5,5.5 5,4.1 1.4,0.5 M9.3,1L5,5.3 5,4.1 8.6,0.5z</Geometry>
    <Geometry x:Key="DownComboNewGeometry">F1M0.7,1.2 L5,5.5 5,4.5 1.2,0.7 M9.3,1.2 L5.5,5.5 5.5,4.5 8.8,0.7z</Geometry>

    <SolidColorBrush x:Key="ComboBox2NormalBorderBrush" Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}" />
    <SolidColorBrush x:Key="ComboBox2NormalBackgroundBrush" Color="{DynamicResource {x:Static SystemColors.ControlLightLightColorKey}}" />
    <SolidColorBrush x:Key="ComboBox2DisabledBackgroundBrush" Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}" />

    <ControlTemplate TargetType="ToggleButton" x:Key="ToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="17" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="1" Name="ButtonBorder" SnapsToDevicePixels="True"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{Binding Path=., Source={StaticResource Thickness0111}}" 
              Background="{TemplateBinding Background}" />

            <Path Name="Arrow" Grid.Column="1" 
            Data="{StaticResource DownComboGeometry}"
            Margin="-2,0,0,0"
            HorizontalAlignment="Center" Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
            VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="BorderThickness" TargetName="ButtonBorder" Value="{Binding Path=., Source={StaticResource Thickness1}}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
                <Setter Property="BorderThickness" TargetName="ButtonBorder" Value="{Binding Path=., Source={StaticResource Thickness1}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBox2DisabledBackgroundBrush}"/>
                <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ComboBox2DisabledBackgroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="ToggleButton" x:Key="ToggleButtonComboBox2Template">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="17" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBox2NormalBorderBrush}" 
              BorderThickness="{Binding Path=., Source={StaticResource Thickness1}}" 
              Background="{StaticResource ComboBox2NormalBackgroundBrush}" />
            <Border Grid.Column="1" Name="ButtonBorder"
              BorderBrush="{StaticResource ComboBox2NormalBorderBrush}"
              BorderThickness="{Binding Path=., Source={StaticResource Thickness0111}}" 
              Background="{StaticResource ComboBox2NormalBackgroundBrush}" />

            <Path Name="Arrow" Grid.Column="1" 
            Data="{StaticResource DownComboGeometry}"
            Margin="-2,0,0,0"
            HorizontalAlignment="Center" Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
            VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="BorderThickness" TargetName="ButtonBorder" Value="{Binding Path=., Source={StaticResource Thickness1}}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.DesktopBrushKey}}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Background" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}"/>
                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
                <Setter Property="BorderThickness" TargetName="ButtonBorder" Value="{Binding Path=., Source={StaticResource Thickness1}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource ComboBox2DisabledBackgroundBrush}"/>
                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBox2DisabledBackgroundBrush}"/>
                <Setter Property="Fill" TargetName="Arrow" Value="{StaticResource ComboBox2DisabledBackgroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}" x:Key="ComboBox2Style">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="MaxDropDownHeight" Value="364" />
        <!--<Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>-->
        <Setter Property="MinHeight" Value="21"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2" ClickMode="Press" Focusable="False"
                          IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                          Template="{StaticResource ToggleButtonComboBox2Template}"/>
                        <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" 
                          Content="{TemplateBinding SelectionBoxItem}"
                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"/>
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                          IsReadOnly="{TemplateBinding IsReadOnly}"
                          Visibility="Hidden" Background="Transparent"
                          HorizontalAlignment="Left" VerticalAlignment="Center"
                          Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <Popup Name="Popup" Placement="Bottom"
                          Focusable="False" AllowsTransparency="True"
                          IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                          PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="{StaticResource ComboBox2NormalBackgroundBrush}" Margin="0, 0, 0, 0" CornerRadius="0" 
                                  BorderThickness="{Binding Path=., Source={StaticResource Thickness1}}" BorderBrush="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}">
                                    <ScrollViewer SnapsToDevicePixels="True" CanContentScroll="True">
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="Background" Value="{StaticResource ComboBox2NormalBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                        <Border Margin="1,1,1,1" Padding="4,3,4,3" MinHeight="17"  Name="BorderItem" BorderThickness="0" Background="{StaticResource ComboBox2NormalBackgroundBrush}">
                                            <ContentPresenter Name="Part_ContentItem" VerticalAlignment="Center"
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                Content="{TemplateBinding ComboBoxItem.Content}"
                                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="BorderItem" Property="Background" Value="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" />
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate TargetType="ToggleButton" x:Key="ToggleButtonComboBoxTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="17" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ControlDarkDarkBrush}" 
              BorderThickness="{Binding Path=., Source={StaticResource Thickness1}}" 
              Background="{StaticResource ControlBrush}" />
            <Path Name="Arrow" Grid.Column="1" 
            Data="{StaticResource DropDownMCArrowGeometry}"
            Margin="-2,0,0,0"
            HorizontalAlignment="Center" Fill="{StaticResource ControlDarkDarkBrush}"
            VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource InactiveCaptionBrush}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource HotTrackBrush}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource InactiveCaptionBrush}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource HotTrackBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource GrayTextBrush}"/>
                <Setter Property="Background" TargetName="Border" Value="{StaticResource ScrollBarBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}" x:Key="ComboBoxStyle">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="MaxDropDownHeight" Value="354" />
        <Setter Property="FrameworkElement.FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="3" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="MinHeight" Value="21"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" ClickMode="Press" Focusable="False"
                          IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                          Template="{StaticResource ToggleButtonComboBoxTemplate}"/>
                        <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" 
                          Content="{TemplateBinding SelectionBoxItem}"
                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"/>
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                          IsReadOnly="{TemplateBinding IsReadOnly}"
                          Visibility="Hidden" Background="Transparent"
                          HorizontalAlignment="Left" VerticalAlignment="Center"
                          Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <Popup x:Name="Popup" Placement="Bottom"
                          Focusable="False" AllowsTransparency="True"
                          IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                          PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" Background="Transparent">
                                <Border Name="DropDownBorder" Background="{StaticResource WindowBrush}" Margin="0, 0, 0, 0" CornerRadius="0" 
                                  BorderThickness="{Binding Path=., Source={StaticResource Thickness1}}" BorderBrush="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}">
                                    <ScrollViewer SnapsToDevicePixels="True" CanContentScroll="True">
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="Background" Value="{StaticResource WindowBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource ControlTextBrush}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                        <Border Padding="4,3,4,3" MinHeight="17"  x:Name="BorderItem" BorderThickness="0" Background="{StaticResource WindowBrush}">
                                            <ContentPresenter Name="Part_ContentItem" VerticalAlignment="Center"
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                Content="{TemplateBinding ComboBoxItem.Content}"
                                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="BorderItem" Property="Background" Value="{StaticResource HighlightBrush}" />
                                                <Setter Property="Foreground" Value="{StaticResource HighlightTextBrush}" />
                                            </Trigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=ItemsPresenter}}" Value="False" />
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="BorderItem" Property="Background" Value="{StaticResource HighlightBrush}" />
                                                <Setter Property="Foreground" Value="{StaticResource HighlightTextBrush}" />
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType=ComboBox}}" Value="False">
                                                <Setter Property="Foreground" Value="{StaticResource GrayTextBrush}"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource GrayTextBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--=============================================END COMBOBOX STYLE===================================================-->


    <!--=============================================START TAB CONTROL STYLE===================================================-->
    <Style TargetType="{x:Type TabControl}" x:Key="TabControlStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type TabItem}" >
                            <Setter Property="Template" Value="{DynamicResource TabItemTemplate}" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="Transparent" />
                        <Border SnapsToDevicePixels="True"  x:Name="Border" Grid.Row="1" BorderThickness="{Binding Path=., Source={StaticResource Thickness1}}" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2">
                            <Grid Background="White">
                                <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type TabItem}" x:Key="TabItemTemplate">
        <Border SnapsToDevicePixels="True"  BorderThickness="{Binding Path=., Source={StaticResource Thickness1110}}" Margin="{Binding Path=., Source={StaticResource Thickness00-10}}"  BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Name="BorderPanel" VerticalAlignment="Bottom" Padding="4,0,4,0">
            <Grid MinHeight="19">
                <ContentPresenter x:Name="ContentSite" Margin="{Binding Path=., Source={StaticResource Thickness0-100}}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                ContentSource="Header"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="BorderPanel" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                <Setter TargetName="BorderPanel" Property="Height" Value="22" />
                <Setter TargetName="BorderPanel" Property="Margin" Value="{Binding Path=., Source={StaticResource Thickness00-1-1}}" />
                <Setter TargetName="BorderPanel" Property="Padding" Value="4,0,4,2" />
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter TargetName="BorderPanel" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                <Setter TargetName="BorderPanel" Property="Height" Value="19" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type TabControl}" x:Key="TabControlLeftHeaderStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type TabItem}" >
                            <Setter Property="Template" Value="{DynamicResource TabItemLeftHeaderTemplate}" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ScrollViewer Grid.Column="0" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                            <Border SnapsToDevicePixels="True"  BorderThickness="{Binding Path=., Source={StaticResource Thickness1}}" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="1">
                                <StackPanel x:Name="HeaderPanel" Panel.ZIndex="1" Margin="0" IsItemsHost="True" Orientation="Vertical" Background="{TemplateBinding Background}" />
                            </Border>
                        </ScrollViewer>
                        <Border SnapsToDevicePixels="True"  x:Name="Border" Grid.Column="2" BorderThickness="{Binding Path=., Source={StaticResource Thickness1}}" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="PART_SelectedContentHost" Margin="4" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type TabItem}" x:Key="TabItemLeftHeaderTemplate">
        <Border SnapsToDevicePixels="True"  BorderThickness="{Binding Path=., Source={StaticResource Thickness1}}" BorderBrush="Transparent" Name="BorderPanel" VerticalAlignment="Top" Background="Transparent">
            <ContentPresenter x:Name="ContentSite"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                ContentSource="Header" 
								Margin="8,5"/>

        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="BorderPanel" Property="Background" Value="#A3BDE3" />
                <!-- <Setter TargetName="BorderPanel" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" /> -->
            </Trigger>
            <!--<Trigger Property="Content" SourceName="ContentSite" Value="{x:Static TextBlock}">
				<Setter Property="IsEnabled" Value="False" />
				<Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed" />
				<Setter TargetName="BorderPanel" Property="BorderBrush" Value="LightGray" />
				<Setter TargetName="BorderPanel" Property="Margin" Value="8,0" />
			</Trigger>-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="BorderPanel" Property="Background" Value="#D5E1F2" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--=============================================END TAB CONTROL STYLE===================================================-->

    <!--=============================================START GROUP BOX CONTROL STYLE===================================================-->
    <Style TargetType="{x:Type GroupBox}" x:Key="GroupBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Row="0" Grid.Column="0"
                            Margin="0" VerticalAlignment="Center"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <Border Grid.Row="0" Grid.Column="1" BorderThickness="{Binding Path=., Source={StaticResource Thickness0001}}" BorderBrush="{StaticResource ControlDarkBrush}" VerticalAlignment="Center" Margin="3,1,0,0" SnapsToDevicePixels="True" />
                        <Border  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GroupBox}" x:Key="GroupBoxStyle2">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ContentPresenter Grid.Row="0" Grid.Column="0"
                            Margin="0" VerticalAlignment="Center"
                            ContentSource="Header"
                            RecognizesAccessKey="True" />
                        <Border Grid.Row="0" Grid.Column="1" BorderThickness="{Binding Path=., Source={StaticResource Thickness0001}}" BorderBrush="{TemplateBinding BorderBrush}" VerticalAlignment="Center" Margin="3,1,0,0" SnapsToDevicePixels="True" />
                        <Border  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="0" BorderBrush="Transparent" Padding="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--=============================================END GROUP BOX CONTROL STYLE===================================================-->

</ResourceDictionary>